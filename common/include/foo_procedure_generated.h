// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_FOOPROCEDURE_TELEMETRY_BUFFERS_H_
#define FLATBUFFERS_GENERATED_FOOPROCEDURE_TELEMETRY_BUFFERS_H_

#include "flatbuffers/flatbuffers.h"

namespace Telemetry {
namespace Buffers {

struct FooProcedure;

struct FooProcedure FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_BAR = 4,
    VT_BAZ = 6
  };
  const flatbuffers::String *bar() const {
    return GetPointer<const flatbuffers::String *>(VT_BAR);
  }
  int32_t baz() const {
    return GetField<int32_t>(VT_BAZ, 0);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<flatbuffers::uoffset_t>(verifier, VT_BAR) &&
           verifier.Verify(bar()) &&
           VerifyField<int32_t>(verifier, VT_BAZ) &&
           verifier.EndTable();
  }
};

struct FooProcedureBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_bar(flatbuffers::Offset<flatbuffers::String> bar) {
    fbb_.AddOffset(FooProcedure::VT_BAR, bar);
  }
  void add_baz(int32_t baz) {
    fbb_.AddElement<int32_t>(FooProcedure::VT_BAZ, baz, 0);
  }
  FooProcedureBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  FooProcedureBuilder &operator=(const FooProcedureBuilder &);
  flatbuffers::Offset<FooProcedure> Finish() {
    const auto end = fbb_.EndTable(start_, 2);
    auto o = flatbuffers::Offset<FooProcedure>(end);
    return o;
  }
};

inline flatbuffers::Offset<FooProcedure> CreateFooProcedure(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::String> bar = 0,
    int32_t baz = 0) {
  FooProcedureBuilder builder_(_fbb);
  builder_.add_baz(baz);
  builder_.add_bar(bar);
  return builder_.Finish();
}

inline flatbuffers::Offset<FooProcedure> CreateFooProcedureDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const char *bar = nullptr,
    int32_t baz = 0) {
  return CreateFooProcedure(
      _fbb,
      bar ? _fbb.CreateString(bar) : 0,
      baz);
}

}  // namespace Buffers
}  // namespace Telemetry

#endif  // FLATBUFFERS_GENERATED_FOOPROCEDURE_TELEMETRY_BUFFERS_H_
